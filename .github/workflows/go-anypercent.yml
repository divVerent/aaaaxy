name: Any% Multi-Platform Test Run
'on':
  pull_request: null
  push: null
  schedule:
    - cron: '55 22 * * *'
  workflow_dispatch: null
jobs:
  build-linux-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Dependencies
        run: 'sudo apt-get update && sudo apt-get -y install libasound2-dev libgl-dev
          libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev xvfb'
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      - name: Build
        run: 'make'
        env:
          AAAAXY_BUILD_USE_VERSION_FILE: true
      - name: Archive Binary
        uses: actions/upload-artifact@v4
        with:
          name: aaaaxy-debug-linux-amd64
          path: |
            aaaaxy
            assets/generated/
  test-linux-amd64:
    needs: build-linux-amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Dependencies
        run: 'sudo apt-get update && sudo apt-get -y install libgl1 xvfb'
      - name: Download Binary
        uses: actions/download-artifact@v4
        with:
          name: aaaaxy-debug-linux-amd64
      - name: Make Binary Executable
        run: 'chmod +x aaaaxy'
      - name: Test
        run: 'xvfb-run sh scripts/regression-test-demo.sh linux-amd64 "your time:
          0:21:47.250; your speedrun categories: Any%;" ./aaaaxy assets/demos/_anypercent.dem'
      - name: Archive Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: regression-test-results-anypercent-linux-amd64
          path: |
            assets/demos/*.dem.*.log
            assets/demos/*.dem.*.png
  build-windows-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Dependencies
        run: 'sudo apt-get update && sudo apt-get -y install imagemagick libasound2-dev
          libgl-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev'
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      - name: Build
        run: 'make'
        env:
          AAAAXY_BUILD_USE_VERSION_FILE: true
          GOARCH: amd64
          GOOS: windows
      - name: Archive Binary
        uses: actions/upload-artifact@v4
        with:
          name: aaaaxy-debug-windows-amd64
          path: |
            aaaaxy.exe
            assets/generated/
  test-windows-amd64:
    needs: build-windows-amd64
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Download Binary
        uses: actions/download-artifact@v4
        with:
          name: aaaaxy-debug-windows-amd64
      - name: Test
        run: 'bash scripts/regression-test-demo.sh windows-amd64 "your time: 0:21:47.250;
          your speedrun categories: Any%;" "./aaaaxy.exe" assets/demos/_anypercent.dem'
      - name: Archive Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: regression-test-results-anypercent-windows-amd64
          path: |
            assets/demos/*.dem.*.log
            assets/demos/*.dem.*.png
  build-windows-386:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Dependencies
        run: 'sudo apt-get update && sudo apt-get -y install imagemagick libasound2-dev
          libgl-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev'
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      - name: Build
        run: 'make'
        env:
          AAAAXY_BUILD_USE_VERSION_FILE: true
          GOARCH: 386
          GOOS: windows
      - name: Archive Binary
        uses: actions/upload-artifact@v4
        with:
          name: aaaaxy-debug-windows-386
          path: |
            aaaaxy.exe
            assets/generated/
  test-windows-386:
    needs: build-windows-386
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Download Mesa
        run: 'curl -o mesa3d.7z -L https://github.com/pal1000/mesa-dist-win/releases/download/21.3.0/mesa3d-21.3.0-release-msvc.7z'
      - name: Extract Mesa
        run: '7z e mesa3d.7z x86/\*.dll'
      - name: Download Binary
        uses: actions/download-artifact@v4
        with:
          name: aaaaxy-debug-windows-386
      - name: Test
        run: 'bash scripts/regression-test-demo.sh windows-386 "your time: 0:21:47.250;
          your speedrun categories: Any%;" "./aaaaxy.exe" assets/demos/_anypercent.dem'
      - name: Archive Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: regression-test-results-anypercent-windows-386
          path: |
            assets/demos/*.dem.*.log
            assets/demos/*.dem.*.png
